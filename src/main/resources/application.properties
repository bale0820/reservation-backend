spring.application.name=reservation


# ?? ?? (??? 8080??? ??? ?? ? ??? ??)
server.port=${PORT:8080}


#H2 ?????? ??
spring.datasource.url=jdbc:mysql://localhost:3306/medical_ai?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=mysql1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# JPA ???? ??
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://reservation-db.c96a4owcww63.ap-southeast-2.rds.amazonaws.com:3306/reservationdb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#spring.datasource.username=admin
#spring.datasource.password=mysql1234
#
## JPA ?? (??)
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect



#MyBatis ??: mapper ?? ?? ????
mybatis.mapper-locations=classpath:mapper/*.xml

file.upload-dir=C:/uploads

# ??? OAuth2 ??? ??
spring.security.oauth2.client.registration.naver.client-id=Ap6rPG4ps7AgPG4l_DPi
spring.security.oauth2.client.registration.naver.client-secret=4LXJQBePIG
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=ap-northeast-2
cloud.aws.s3.bucket=my-shopping-image-bucket
cloud.aws.stack.auto=false



kma.api.key=wCIRoWk7S2uiEaFpO5trpg
google.cloud.project-id=agri-vision-shop
google.cloud.credentials.location=file:src/main/resources/vision-key.json

